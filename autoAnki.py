#! python3
import genanki, os, openpyxl, random, pyperclip, re, sys, logging
from gtts import gTTS

#Configure logging
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

#Get Spreadsheet with new vocab
vocabString = pyperclip.paste()
pattern = r'\b([가-힣]+)\b\s*:\s*(\w+)\b'
vocabPairs = re.findall(pattern, vocabString)

#Create Anki Deck
deckId = random.randrange(1 << 30, 1 << 31)
logging.debug('Deck Id is ' + str(deckId))
deck = genanki.Deck(
    deckId,
    'New Auto Generated Vocab')

#Text to speech function
def text_to_speech_korean(word, filename='output.mp3'):
    tts = gTTS(text=word, lang='ko')
    tts.save(filename)
    logging.debug(f'Audio clip saved as {filename}')

#Getting media paths
def get_media_paths(mediaDir):
    mediaFiles = os.listdir(mediaDir)
    for i in range(len(mediaFiles)):
        mediaFiles[i] = mediaDir+'\\'+mediaFiles[i]
    return mediaFiles

#Create Anki Model
modelId = random.randrange(1 << 30, 1 << 31)
logging.debug('Model Id is ' + str(modelId))
model = genanki.Model(
    modelId,
    'Vocab Model',
    fields=[
        {'name': 'Question'},
        {'name': 'Answer'},
        {'name': 'MyMedia'},
        ],
    templates=[
        {
            'name':'Card 1',
            'qfmt':'{{Question}}<br>{{MyMedia}}',
            'afmt':'{{FrontSide}}<hr id="answer">{{Answer}}'
        },
    ])
        

#Add note to deck for each row in spreadsheet
script_directory = os.path.dirname(os.path.abspath(sys.argv[0]))
os.chdir(script_directory)

#Look for folders called KoreanAudio
audioDir = 'koreanAudioFiles';
if not os.path.exists(audioDir):
    os.mkdir(audioDir)
os.chdir(audioDir)
    
for korean, english in vocabPairs:
    text_to_speech_korean(korean, filename=korean+'.mp3')
    sound = '[sound:'+korean+'.mp3]'
    note = genanki.Note(
        model=model,
        fields=[korean, english, sound])
    deck.add_note(note)
    print('Adding note for ' + korean)

os.chdir('..')

#Save media to package
package = genanki.Package(deck)
package.media_files = get_media_paths(audioDir)

#Save .akpg file
package.write_to_file('autoGeneratedDeck.apkg')
print('Created new deck')



